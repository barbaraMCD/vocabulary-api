// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VocabularyAPI.Data;

#nullable disable

namespace VocabularyAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("VocabularyAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 10, 20, 36, 18, 907, DateTimeKind.Utc).AddTicks(2390),
                            Email = "bb@gmail.com",
                            PasswordHash = "test"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 10, 20, 36, 18, 907, DateTimeKind.Utc).AddTicks(2810),
                            Email = "bbr@gmail.com",
                            PasswordHash = "test"
                        });
                });

            modelBuilder.Entity("VocabularyAPI.Models.UserProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CorrectCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastReviewed")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WordId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WordId");

                    b.ToTable("UserProgress");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CorrectCount = 2,
                            LastReviewed = new DateTime(2025, 9, 10, 20, 36, 18, 907, DateTimeKind.Utc).AddTicks(3160),
                            Level = 1,
                            UserId = 1,
                            WordId = 1
                        },
                        new
                        {
                            Id = 2,
                            CorrectCount = 0,
                            LastReviewed = new DateTime(2025, 9, 10, 20, 36, 18, 907, DateTimeKind.Utc).AddTicks(3760),
                            Level = 0,
                            UserId = 1,
                            WordId = 2
                        },
                        new
                        {
                            Id = 3,
                            CorrectCount = 3,
                            LastReviewed = new DateTime(2025, 9, 10, 20, 36, 18, 907, DateTimeKind.Utc).AddTicks(3760),
                            Level = 2,
                            UserId = 2,
                            WordId = 1
                        });
                });

            modelBuilder.Entity("VocabularyAPI.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("French")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Words");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "animals",
                            English = "cat",
                            French = "chat"
                        },
                        new
                        {
                            Id = 2,
                            Category = "animals",
                            English = "dog",
                            French = "chien"
                        });
                });

            modelBuilder.Entity("VocabularyAPI.Models.UserProgress", b =>
                {
                    b.HasOne("VocabularyAPI.Models.User", "User")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VocabularyAPI.Models.Word", "Word")
                        .WithMany()
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("VocabularyAPI.Models.User", b =>
                {
                    b.Navigation("ProgressRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
